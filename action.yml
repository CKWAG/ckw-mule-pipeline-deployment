# This workflow will build a MuleSoft project and deploy to sandbox environment
name: Run the required steps for deploying an mule-app in the sandbox env
description: primary calling maven

inputs:
  muleServer:
    # Possible Values
    ## onprem
    ## cloud (azure cloud)
    ## CloudHub
    required: true
    type: string  
  muleEnvProperties:
    # Possible Values
    ## dev
    ## qa
    ## prod
    required: true
    type: string
  muleDocumentation:
    # Possible Values
    ## DesignCenter
    ## Github
    required: true
    type: string
  anypointClientId:
    required: true
  anypointClientSecret:
    required: true
  ghUser:
    required: true
  ghPassword:
    required: true

runs:
  using: "composite"
  steps:
    - name: Deploy the Mule-App to Exchange and the RuntimeManager - SANDBOX
      run: |
        #internal used variables
        MAVEN_PROFILE="CloudHubSand"
        ADDITIONAL_MAVEN_GOAL="deploy:deploy"
        ADDITIONAL_MAVEN_ARGS=""

        echo "environment: '$MULE_ENV', Runtime: '$MULE_SERVER', Documentation-Source: '$MULE_DOCUMENTATION'"
        if [[ $MULE_SERVER == "onprem" ]] || [[ $MULE_SERVER == "cloud" ]]; then
           MAVEN_PROFILE="RuntimeManager"
           if [[ $MULE_ENV == "prod" ]]; then
              ADDITIONAL_MAVEN_ARGS="-Danypoint.target=ckw-$MULE_SERVER-prod"
           else
              ADDITIONAL_MAVEN_ARGS="-Danypoint.target=ckw-$MULE_SERVER-test"
           fi
        elif [[ $MULE_SERVER == "CloudHub" ]] && [[ $MULE_ENV == "prod" ]]; then
            MAVEN_PROFILE="CloudHubProd"
        else
            echo "CloudHub-Sandbox Deployment"
        fi

        if [[ $MULE_DOCUMENTATION == "DesignCenter" ]]; then
            ADDITIONAL_MAVEN_GOAL="exec:exec"
        fi

        # some debug informations
        echo "ADDITIONAL_MAVEN_GOAL='$ADDITIONAL_MAVEN_GOAL'; MAVEN_PROFILE='$MAVEN_PROFILE', MULE_ENV='$MULE_ENV', ADDITIONAL_MAVEN_ARGS='$ADDITIONAL_MAVEN_ARGS'"

        if [[ $MULE_ENV == "prod" ]]; then
            echo "Production deployment"
            mvn --batch-mode release:clean release:prepare release:perform -Dgh.user=$GH_USER -Dgh.pw=$GH_PASSWORD -Dgoals="deploy $ADDITIONAL_MAVEN_GOAL" -Darguments="-P $MAVEN_PROFILE --batch-mode -DmuleDeploy -Danypoint.AppClientId=$ANYPOINT_CLIENTID -Danypoint.AppClientSecret=$ANYPOINT_CLIENTSECRET -Danypoint.environment=Production -Dmule.env=$MULE_ENV $ADDITIONAL_MAVEN_ARGS"
        else
            echo "Sandbox deployment"
            # first build the mule-app
            mvn --batch-mode clean verify
            # second deploy the mule-app in anypoint and upload the documentationx as Snapshot in a Sandbox-Environment
            mvn --batch-mode deploy $ADDITIONAL_MAVEN_GOAL -P $MAVEN_PROFILE -DmuleDeploy  -Danypoint.environment=Sandbox -Dmule.env=$MULE_ENV -Danypoint.AppClientId=$ANYPOINT_CLIENTID -Danypoint.AppClientSecret=$ANYPOINT_CLIENTSECRET $ADDITIONAL_MAVEN_ARGS
        fi
      env:
        MULE_SERVER: ${{ inputs.muleServer }}
        MULE_ENV_PROPERTIES: ${{ inputs.muleEnvProperties }}
        MULE_DOCUMENTATION: ${{ inputs.muleDocumentation }}
        ANYPOINT_CLIENTID: ${{ inputs.anypointClientId }}
        ANYPOINT_CLIENTSECRET: ${{ inputs.anypointClientSecret }}
        GH_USER: ${{ inputs.ghUser }}
        GH_PASSWORD: ${{ inputs.ghPassword }}
      shell: bash